e37444e3a127e7471ea2866551443a8b
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Command_1 = require("../../../../../modules/Shared/domain/Command");
const CommandNotRegisteredError_1 = require("../../../../../modules/Shared/domain/CommandNotRegisteredError");
const CommandHandlersInformation_1 = require("../../../../../modules/Shared/infrastructure/CommandBus/CommandHandlersInformation");
const InMemoryCommandBus_1 = require("../../../../../modules/Shared/infrastructure/CommandBus/InMemoryCommandBus");
class UnhandledCommand extends Command_1.Command {
}
UnhandledCommand.COMMAND_NAME = "unhandled.command";
class HandledCommand extends Command_1.Command {
}
HandledCommand.COMMAND_NAME = "handled.command";
class MyCommandHandler {
    subscribedTo() {
        return HandledCommand;
    }
    handle(command) {
        return __awaiter(this, void 0, void 0, function* () { });
    }
}
describe("InMemoryCommandBus", () => {
    it("throws an error if dispatches a command without handler", () => __awaiter(void 0, void 0, void 0, function* () {
        const unhandledCommand = new UnhandledCommand();
        const commandHandlersInformation = new CommandHandlersInformation_1.CommandHandlersInformation([]);
        const commandBus = new InMemoryCommandBus_1.InMemoryCommandBus(commandHandlersInformation);
        let exception = null;
        try {
            yield commandBus.dispatch(unhandledCommand);
        }
        catch (error) {
            exception = error;
        }
        expect(exception).toBeInstanceOf(CommandNotRegisteredError_1.CommandNotRegisteredError);
        expect(exception.message).toBe(`The command <UnhandledCommand> hasn't a command handler associated`);
    }));
    it("accepts a command with handler", () => __awaiter(void 0, void 0, void 0, function* () {
        const handledCommand = new HandledCommand();
        const myCommandHandler = new MyCommandHandler();
        const commandHandlersInformation = new CommandHandlersInformation_1.CommandHandlersInformation([myCommandHandler]);
        const commandBus = new InMemoryCommandBus_1.InMemoryCommandBus(commandHandlersInformation);
        yield commandBus.dispatch(handledCommand);
    }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2RhdmlkL0RvY3VtZW50cy9iYW5rLWF1dGgvc3JjL3Rlc3RzL0NvbnRleHRzL1NoYXJlZC9pbmZyYXN0cnVjdHVyZS9Db21tYW5kQnVzL0luTWVtb3J5Q29tbWFuZEJ1cy50ZXN0LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsMEVBQXVFO0FBRXZFLDhHQUEyRztBQUMzRyxtSUFBZ0k7QUFDaEksbUhBQWdIO0FBRWhILE1BQU0sZ0JBQWlCLFNBQVEsaUJBQU87O0FBQzdCLDZCQUFZLEdBQUcsbUJBQW1CLENBQUM7QUFHNUMsTUFBTSxjQUFlLFNBQVEsaUJBQU87O0FBQzNCLDJCQUFZLEdBQUcsaUJBQWlCLENBQUM7QUFHMUMsTUFBTSxnQkFBZ0I7SUFDcEIsWUFBWTtRQUNWLE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7SUFFSyxNQUFNLENBQUMsT0FBdUI7OERBQWtCLENBQUM7S0FBQTtDQUN4RDtBQUVELFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxHQUFHLEVBQUU7SUFDbEMsRUFBRSxDQUFDLHlEQUF5RCxFQUFFLEdBQVMsRUFBRTtRQUN2RSxNQUFNLGdCQUFnQixHQUFHLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztRQUNoRCxNQUFNLDBCQUEwQixHQUFHLElBQUksdURBQTBCLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDdEUsTUFBTSxVQUFVLEdBQUcsSUFBSSx1Q0FBa0IsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBRXRFLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQztRQUVyQixJQUFJO1lBQ0YsTUFBTSxVQUFVLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLENBQUM7U0FDN0M7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUNkLFNBQVMsR0FBRyxLQUFLLENBQUM7U0FDbkI7UUFFRCxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsY0FBYyxDQUFDLHFEQUF5QixDQUFDLENBQUM7UUFDNUQsTUFBTSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsb0VBQW9FLENBQUMsQ0FBQztJQUN2RyxDQUFDLENBQUEsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGdDQUFnQyxFQUFFLEdBQVMsRUFBRTtRQUM5QyxNQUFNLGNBQWMsR0FBRyxJQUFJLGNBQWMsRUFBRSxDQUFDO1FBQzVDLE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO1FBQ2hELE1BQU0sMEJBQTBCLEdBQUcsSUFBSSx1REFBMEIsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUN0RixNQUFNLFVBQVUsR0FBRyxJQUFJLHVDQUFrQixDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFFdEUsTUFBTSxVQUFVLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzVDLENBQUMsQ0FBQSxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvZGF2aWQvRG9jdW1lbnRzL2JhbmstYXV0aC9zcmMvdGVzdHMvQ29udGV4dHMvU2hhcmVkL2luZnJhc3RydWN0dXJlL0NvbW1hbmRCdXMvSW5NZW1vcnlDb21tYW5kQnVzLnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL1NoYXJlZC9kb21haW4vQ29tbWFuZFwiO1xuaW1wb3J0IHsgQ29tbWFuZEhhbmRsZXIgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9TaGFyZWQvZG9tYWluL0NvbW1hbmRIYW5kbGVyXCI7XG5pbXBvcnQgeyBDb21tYW5kTm90UmVnaXN0ZXJlZEVycm9yIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL21vZHVsZXMvU2hhcmVkL2RvbWFpbi9Db21tYW5kTm90UmVnaXN0ZXJlZEVycm9yXCI7XG5pbXBvcnQgeyBDb21tYW5kSGFuZGxlcnNJbmZvcm1hdGlvbiB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL1NoYXJlZC9pbmZyYXN0cnVjdHVyZS9Db21tYW5kQnVzL0NvbW1hbmRIYW5kbGVyc0luZm9ybWF0aW9uXCI7XG5pbXBvcnQgeyBJbk1lbW9yeUNvbW1hbmRCdXMgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9TaGFyZWQvaW5mcmFzdHJ1Y3R1cmUvQ29tbWFuZEJ1cy9Jbk1lbW9yeUNvbW1hbmRCdXNcIjtcblxuY2xhc3MgVW5oYW5kbGVkQ29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuICBzdGF0aWMgQ09NTUFORF9OQU1FID0gXCJ1bmhhbmRsZWQuY29tbWFuZFwiO1xufVxuXG5jbGFzcyBIYW5kbGVkQ29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuICBzdGF0aWMgQ09NTUFORF9OQU1FID0gXCJoYW5kbGVkLmNvbW1hbmRcIjtcbn1cblxuY2xhc3MgTXlDb21tYW5kSGFuZGxlciBpbXBsZW1lbnRzIENvbW1hbmRIYW5kbGVyPEhhbmRsZWRDb21tYW5kPiB7XG4gIHN1YnNjcmliZWRUbygpOiBIYW5kbGVkQ29tbWFuZCB7XG4gICAgcmV0dXJuIEhhbmRsZWRDb21tYW5kO1xuICB9XG5cbiAgYXN5bmMgaGFuZGxlKGNvbW1hbmQ6IEhhbmRsZWRDb21tYW5kKTogUHJvbWlzZTx2b2lkPiB7fVxufVxuXG5kZXNjcmliZShcIkluTWVtb3J5Q29tbWFuZEJ1c1wiLCAoKSA9PiB7XG4gIGl0KFwidGhyb3dzIGFuIGVycm9yIGlmIGRpc3BhdGNoZXMgYSBjb21tYW5kIHdpdGhvdXQgaGFuZGxlclwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdW5oYW5kbGVkQ29tbWFuZCA9IG5ldyBVbmhhbmRsZWRDb21tYW5kKCk7XG4gICAgY29uc3QgY29tbWFuZEhhbmRsZXJzSW5mb3JtYXRpb24gPSBuZXcgQ29tbWFuZEhhbmRsZXJzSW5mb3JtYXRpb24oW10pO1xuICAgIGNvbnN0IGNvbW1hbmRCdXMgPSBuZXcgSW5NZW1vcnlDb21tYW5kQnVzKGNvbW1hbmRIYW5kbGVyc0luZm9ybWF0aW9uKTtcblxuICAgIGxldCBleGNlcHRpb24gPSBudWxsO1xuXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGNvbW1hbmRCdXMuZGlzcGF0Y2godW5oYW5kbGVkQ29tbWFuZCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGV4Y2VwdGlvbiA9IGVycm9yO1xuICAgIH1cblxuICAgIGV4cGVjdChleGNlcHRpb24pLnRvQmVJbnN0YW5jZU9mKENvbW1hbmROb3RSZWdpc3RlcmVkRXJyb3IpO1xuICAgIGV4cGVjdChleGNlcHRpb24ubWVzc2FnZSkudG9CZShgVGhlIGNvbW1hbmQgPFVuaGFuZGxlZENvbW1hbmQ+IGhhc24ndCBhIGNvbW1hbmQgaGFuZGxlciBhc3NvY2lhdGVkYCk7XG4gIH0pO1xuXG4gIGl0KFwiYWNjZXB0cyBhIGNvbW1hbmQgd2l0aCBoYW5kbGVyXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVkQ29tbWFuZCA9IG5ldyBIYW5kbGVkQ29tbWFuZCgpO1xuICAgIGNvbnN0IG15Q29tbWFuZEhhbmRsZXIgPSBuZXcgTXlDb21tYW5kSGFuZGxlcigpO1xuICAgIGNvbnN0IGNvbW1hbmRIYW5kbGVyc0luZm9ybWF0aW9uID0gbmV3IENvbW1hbmRIYW5kbGVyc0luZm9ybWF0aW9uKFtteUNvbW1hbmRIYW5kbGVyXSk7XG4gICAgY29uc3QgY29tbWFuZEJ1cyA9IG5ldyBJbk1lbW9yeUNvbW1hbmRCdXMoY29tbWFuZEhhbmRsZXJzSW5mb3JtYXRpb24pO1xuXG4gICAgYXdhaXQgY29tbWFuZEJ1cy5kaXNwYXRjaChoYW5kbGVkQ29tbWFuZCk7XG4gIH0pO1xufSk7XG4iXSwidmVyc2lvbiI6M30=