{"file":"/Users/david/Documents/bank-auth/src/modules/Users/domain/UserName.ts","mappings":";;;AAAA,gGAA6F;AAC7F,0FAAuF;AAEvF,MAAa,QAAS,SAAQ,qCAAiB;IAC3C,YAAY,KAAa;QACrB,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,kCAAkC,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEO,kCAAkC,CAAC,KAAa;QACpD,IAAI,KAAK,CAAC,MAAM,GAAG,EAAE,EAAE;YACnB,MAAM,IAAI,2CAAoB,CAAC,kBAAkB,KAAK,+BAA+B,CAAC,CAAC;SAC1F;IACL,CAAC;CACJ;AAXD,4BAWC","names":[],"sources":["/Users/david/Documents/bank-auth/src/modules/Users/domain/UserName.ts"],"sourcesContent":["import { InvalidArgumentError } from \"../../Shared/domain/value-object/InvalidArgumentError\";\nimport { StringValueObject } from \"../../Shared/domain/value-object/StringValueObject\";\n\nexport class UserName extends StringValueObject {\n    constructor(value: string) {\n        super(value);\n        this.ensureLengthIsLessThan30Characters(value);\n    }\n\n    private ensureLengthIsLessThan30Characters(value: string): void {\n        if (value.length > 30) {\n            throw new InvalidArgumentError(`The User Name <${value}> has more than 30 characters`);\n        }\n    }\n}"],"version":3}