{"file":"/Users/david/Documents/bank-auth/src/modules/Shared/domain/AggregateRoot.ts","mappings":";;;AAEA,MAAsB,aAAa;IAGjC;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,gBAAgB;QACd,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,KAAkB;QACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;CAGF;AAnBD,sCAmBC","names":[],"sources":["/Users/david/Documents/bank-auth/src/modules/Shared/domain/AggregateRoot.ts"],"sourcesContent":["import { DomainEvent } from './DomainEvent';\n\nexport abstract class AggregateRoot {\n  private domainEvents: Array<DomainEvent>;\n\n  constructor() {\n    this.domainEvents = [];\n  }\n\n  pullDomainEvents(): Array<DomainEvent> {\n    const domainEvents = this.domainEvents.slice();\n    this.domainEvents = [];\n\n    return domainEvents;\n  }\n\n  record(event: DomainEvent): void {\n    this.domainEvents.push(event);\n  }\n\n  abstract toPrimitives(): any;\n}\n"],"version":3}